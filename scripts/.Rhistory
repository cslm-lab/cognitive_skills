# mexgauss function from retimes package (not compatible with my R version, so we specify the function here)
mexgauss <- function(x,n=length(x))
{
k <- start <- c(mu=NaN,sigma=NaN,tau=NaN) # Momenti
k[1] <- mean(x)
xdev <- x-k[1]
k[2] <- sum(xdev^2)/(n-1)
k[3] <- sum(xdev^3)/(n-1)
if(k[3] > 0)
start[3] <- (k[3]/2)^(1/3)
else
start[3] <- 0.8*sd(x)
start[2] <- sqrt(abs(k[2]-start[3]^2))
start[1] <- k[1]-start[3]
return(start)
}
cor_func <- function(data, mapping, method, ...){
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr_obj <- cor.test(x, y, method=method, use='complete.obs')
cor_signif <- symnum(corr_obj$p.value,
cutpoints = c(0, .001, .01, .05, .1, 1),
symbols = c("***", "**", "*", ".", " "))
label <- paste(signif(corr_obj$estimate, 2),
cor_signif,
sep = "", collapse = "")
ggally_text(
label = label,
mapping = aes(),
xP = 0.5, yP = 0.5,
color = 'black',
...
)
}
mycenter <- function(x){
x <- x-mean(x)
}
lowerFn <- function(data, mapping, method = "lm", ...) {
p <- ggplot(data = data, mapping = mapping) +
geom_point(colour = "#440154FF", alpha = .5) +
geom_smooth(method = method, size = .5, color = "black", ...)
p
}
# Reanalysis of EEG experiment: individual differences
df <- read.csv("../data/Results_PWI_EEG_20200526.csv", sep=";")
colnames(df)[1] <- "Participant"
ccpt <- fread("../data/Experience_01_CCPT.csv", select = c("sujet", "Hit_rate"))
colnames(ccpt) <- c("Participant", "CCPT")
ccpt <- distinct(ccpt)
ctet <- fread("../data/CTET_Results.csv", select = c("Participant", "Hit"))
colnames(ctet)[2] <- "CTET"
ospan <- fread("../data/OSpan_Results.csv", select = c("Participant", "Mean_Block"))
colnames(ospan)[2] <- "OSpan"
rotspan <- fread("../data/RotSpan_Results.csv", select = c("Participant", "Mean_Block"))
colnames(rotspan)[2] <- "RotSpan"
symspan <- fread("../data/SymSpan_Results.csv", select = c("Participant", "Mean_Block"))
colnames(symspan)[2] <- "SymSpan"
ssrt <- fread("../data/StopSignal_Results.csv", select = c("Participant", "Mean_SSRTi"))
colnames(ssrt)[2] <- "SSRT"
df$Participant <- as.factor(as.character(df$Participant))
df$Trial.position <- as.numeric(as.character(df$Picture_ID_Multipic))
df$Picture  <- as.factor(as.character(df$Trigger_Picture))
df$Comment <- as.factor(as.character(df$Response_Trial))
df$Condition <- as.factor(as.character(df$Trigger_Condition))
df$Condition <- plyr::mapvalues(df$Condition, from = c("101", "102", "103","104","105"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
df$Condition <- as.factor(as.character(df$Condition))
nrow(df)
table(df$Response_Trial)
df2b <- df[df$Response_Trial=="correct",]
nrow(df2b)
nrow(df2b)-nrow(df)
nrow(df) - nrow(df2b)
df2b <- df2b[df2b$RT < 2301,]
df3 <- df2b[!is.na(df2b$RT),]
df3 <- df3 %>% select(Participant, RT, Condition, Picture, Flanker_RT_cost, Simon_RT_cost)
df4 <- merge(merge(merge(merge(merge(merge(
df3,
ccpt,),
ctet,),
ospan,),
symspan,),
rotspan,),
ssrt,
by = "Participant")
colnames(df4)[5:12] <- c("Flanker RT cost", "Simon RT cost", "Conjunctive continuous\n performance", "Continuous time\n expectancy", "Operation Span", "Symmetry Span", "Rotation Span", "Stop-signal reaction time")
cog_skills <- df4 %>%
filter(Condition == "baseline") %>%
select(c(1,5:12)) %>%
distinct(.) #%>%
# pivot_longer(., cols = 2:9, names_to = "measure", values_to = "score")
cog_skills_long <- cog_skills %>%
pivot_longer(., cols = 2:9, names_to = "measure", values_to = "score")
dsc <- cog_skills_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(mean = round(mean(score),2))
dsc_sd <- cog_skills_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(sd = round(sd(score),2))
dsc <- merge(dsc, dsc_sd, by = "measure")
dsc$skill <- c("Sustained attention", "Sustained attention", "Selective inhibition",
"Working memory", "Working memory", "Selective inhibition",
"Non-selective inhibition", "Working memory")
dsc <- dsc[,c(1,4,2:3)]
colnames(dsc)[1:2] <- c("Test", "Skill being measured")
kable(
dsc,
caption = "Mean and standard deviation (sd) of scores on all cognitive tests.",
booktabs = T
) %>%
row_spec(0, italic = TRUE) %>%
kable_styling()
exgaussian <- df4 %>%
filter(Condition == "baseline") %>%
group_by(Participant) %>%
group_modify(~ broom::tidy(mexgauss(.$RT, n = length(.$RT)))) %>%
pivot_wider(names_from = names, values_from = x)
exgauss_cogskills <- merge(cog_skills_2, exgaussian, by = "Participant")
cog_skills_2 <- cog_skills
colnames(cog_skills_2)[2:9] <- c("Flanker", "Simon", "CCPT", "CTET", "O-Span", "S-Span", "R-Span", "SSRT")
cog_skills_2 <- cog_skills_2[-4]
ggpairs(cog_skills_2,
columns = 2:8,
upper = list(continuous = wrap(cor_func, method = "pearson", size = 2.5)),
lower = list(continuous = wrap(lowerFn)),
diag = list(continuous = wrap(ggally_barDiag))) +
theme(axis.text.x = element_text(angle = 90))
exgaussian <- df4 %>%
filter(Condition == "baseline") %>%
group_by(Participant) %>%
group_modify(~ broom::tidy(mexgauss(.$RT, n = length(.$RT)))) %>%
pivot_wider(names_from = names, values_from = x)
exgauss_cogskills <- merge(cog_skills_2, exgaussian, by = "Participant")
exgauss_cogskills[2:8] <- map_df(exgauss_cogskills[2:8], mycenter)
dat <- exgauss_cogskills[c(2:9,11)]
cor_mu <- psych::corr.test(dat[1:7], dat$mu)
cor_tau <- psych::corr.test(dat[1:7], dat$tau)
cor_mu_tau <- data.frame(cor_mu$r, cor_mu$p, cor_tau$r, cor_tau$p)
cor_mu_tau <- round(cor_mu_tau,2)
colnames(cor_mu_tau) <- c("mu r", "mu p", "tau r", "tau p")
View(cor_mu_tau)
View(cor_mu)
View(cog_skills_long)
View(cog_skills_2)
View(cog_skills)
View(exgauss_cogskills)
exp2 <- read.csv("../data/Experiment_2_data.csv", sep=",")
exp2$Accuracy <- as.factor(as.character(exp2$Response_Trial))
exp2$Participant <- as.factor(as.character(exp2$Participant_ID))
exp2$Picture  <- as.factor(as.character(exp2$Picture_Name))
exp2$Comment <- as.factor(as.character(exp2$Response_Trial))
exp2$Condition <- as.factor(as.character(exp2$Condition_ID))
exp2$Condition <- plyr::mapvalues(exp2$Condition, from = c("9001", "9002", "9003","9004","9005"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
exp2$Condition <- as.factor(as.character(exp2$Condition))
exp2$Speed <- ifelse(exp2$Type_Speed == 3001, "normal", "fast")
df5 <- exp2 %>%
filter(Response_Trial == "correct", RT != "NA")
df5 <- df5 %>% select(Participant, RT, Condition, Picture, Speed, Flanker_Cost, Simon_Cost, CCPT_Hit_rate, CTET_Hit_rate, Ospan_PCU, Symspan_PCU, Rotspan_PCU, SSRTi)
colnames(df5)[6:13] <- c("Flanker RT cost", "Simon RT cost", "Conjunctive continuous\n performance", "Continuous time\n expectancy", "Operation Span", "Symmetry Span", "Rotation Span", "Stop-signal reaction time")
cog_skills_exp2 <- df5 %>%
select(-c(RT, Condition, Picture, Speed)) %>%
distinct(.)
cog_skills_exp2_long <- cog_skills_exp2 %>% pivot_longer(., cols = 2:9, names_to = "measure", values_to = "score")
dscE2 <- cog_skills_exp2_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(mean = round(mean(score),2))
dsc_sd_E2 <- cog_skills_exp2_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(sd = round(sd(score),2))
dscE2 <- merge(dscE2, dsc_sd_E2, by = "measure")
dscE2$skill <- c("Sustained attention", "Sustained attention",
"Selective inhibition", "Working memory", "Working memory",
"Selective inhibition", "Non-selective inhibition",
"Working memory")
dscE2 <- dscE2[,c(1,4,2:3)]
colnames(dscE2)[1:2] <- c("Test", "Skill being measured")
kable(
dscE2,
caption = "Mean and standard deviation (sd) of scores on all cognitive tests.",
booktabs = T
) %>%
row_spec(0, italic = TRUE) %>%
kable_styling()
cog_skills_exp2_2 <- cog_skills_exp2
colnames(cog_skills_exp2_2)[2:9] <- c("Flanker", "Simon", "CCPT", "CTET", "O-Span", "S-Span", "R-Span", "SSRT")
cog_skills_exp2_2 <- cog_skills_exp2_2[-4]
ggpairs(cog_skills_exp2_2,
columns = 2:8,
upper = list(continuous = wrap(cor_func, method = "pearson", size = 2.5)),
lower = list(continuous = wrap(lowerFn)),
diag = list(continuous = wrap(ggally_barDiag))) +
theme(axis.text.x = element_text(angle = 90))
df6 <- df5 %>%
filter(Condition == "baseline") %>%
select(Participant, RT, Picture, Speed)
df6$Speed <- as.factor(df6$Speed)
contrasts(df6$Speed) <- c(-.5,.5)
m_speed <- lmer(log(RT) ~ Speed + (Speed|Participant) + (1|Picture),
data = df6)
m_speed_raw <- lmer(RT ~ Speed + (Speed|Participant) + (1|Picture),
data = df6)
exp2_speed <- tidy(m_speed_raw)
exp2_speed <- exp2_speed %>%
filter(effect == "fixed") %>%
select(-c(effect, group, df)) %>%
mutate(p.value = round(p.value, digits = 2)) %>%
mutate(estimate = round(estimate, digits = 0)) %>%
mutate(std.error = round(std.error, digits = 0)) %>%
mutate(p.value = ifelse(p.value < .001, "<.001", p.value))
labels_exp2_speed <- c("Intercept", "Speed Condition")
exp2_speed$term <- plyr::mapvalues(exp2_speed$term, exp2_speed$term, labels_exp2_speed)
exgaussianE2 <- df5 %>%
filter(Condition == "baseline" & Speed == "normal") %>%
group_by(Participant) %>%
group_modify(~ broom::tidy(mexgauss(.$RT, n = length(.$RT)))) %>%
pivot_wider(names_from = names, values_from = x)
exgauss_cogskillsE2 <- merge(cog_skills_exp2_2, exgaussianE2, by = "Participant")
exgauss_cogskillsE2[2:8] <- map_df(exgauss_cogskillsE2[2:8], mycenter)
dat2 <- exgauss_cogskillsE2[c(2:9,11)]
cor_muE2 <- psych::corr.test(dat2[1:7], dat2$mu)
cor_tauE2 <- psych::corr.test(dat2[1:7], dat2$tau)
cor_mu_tauE2 <- data.frame(cor_muE2$r, cor_muE2$p, cor_tauE2$r, cor_tauE2$p)
cor_mu_tauE2 <- round(cor_mu_tauE2,2)
colnames(cor_mu_tauE2) <- c("mu r", "mu p", "tau r", "tau p")
View(exgauss_cogskillsE2)
exp1corr <- ggplot(exgauss_cogskills, aes(CTET, mu)) +
geom_point() +
geom_smooth(method = "lm")
View(exp1corr)
exp1corr
exp1corr <- ggplot(exgauss_cogskills, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black")
exp1corr
exp1corr <- ggplot(exgauss_cogskills, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "Continuous time expectancy task", y = "Picture naming response time: mu parameter")
exp1corr
exp1corr1 <- ggMarginal(exp1corr, type="histogram")
library(ggExtra)
install.packages("ggExtra")
library(ggExtra)
exp1corr1 <- ggMarginal(exp1corr, type="histogram")
exp1corr1
exp2corr <- ggplot(exgauss_cogskillsE2, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "Continuous time expectancy task", y = "Picture naming response time: mu parameter")
exp2corr1 <- ggMarginal(exp2corr, type = "histogram")
exp2corr1
cowplot::plot_grid
cowplot::plot_grid(exp1corr1, exp2corr1)
library(cowplot)
plot_row <- plot_grid(exp1corr1, exp2corr1)
exp2corr <- ggplot(exgauss_cogskillsE2, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "Continuous time expectancy task", y = "")
exp2corr1 <- ggMarginal(exp2corr, type = "histogram")
plot_row <- plot_grid(exp1corr1, exp2corr1)
exp1corr <- ggplot(exgauss_cogskills, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "Picture naming response time: mu parameter")
exp1corr1 <- ggMarginal(exp1corr, type = "histogram")
exp2corr <- ggplot(exgauss_cogskillsE2, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "")
exp2corr1 <- ggMarginal(exp2corr, type = "histogram")
plot_row <- plot_grid(exp1corr1, exp2corr1)
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)"
)
plot_grid(
xlabel, plot_row,
ncol = 1,
# rel_heights values control vertical title margins
#rel_heights = c(0.1, 1)
)
plot_grid(
xlabel, plot_row,
ncol = 1
# rel_heights values control vertical title margins
#rel_heights = c(0.1, 1)
)
plot_grid(
xlabel, plot_row
# rel_heights values control vertical title margins
#rel_heights = c(0.1, 1)
)
plot_grid(
plot_row, xlabel,
nrow = 2
# rel_heights values control vertical title margins
#rel_heights = c(0.1, 1)
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.1)
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.05)
)
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)",
size = 8
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.05)
)
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)",
size = 10
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.05)
)
exp1corr <- ggplot(exgauss_cogskills, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "Picture naming response time: mu parameter\n")
exp1corr1 <- ggMarginal(exp1corr, type = "histogram")
exp1corr1 <- ggMarginal(exp1corr, type = "histogram")
exp2corr <- ggplot(exgauss_cogskillsE2, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "")
exp2corr <- ggplot(exgauss_cogskillsE2, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "")
exp2corr1 <- ggMarginal(exp2corr, type = "histogram")
exp1corr1 <- ggMarginal(exp1corr, type = "histogram")
exp2corr <- ggplot(exgauss_cogskillsE2, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "")
exp2corr1 <- ggMarginal(exp2corr, type = "histogram")
plot_row <- plot_grid(exp1corr1, exp2corr1)
plot_row <- plot_grid(exp1corr1, exp2corr1)
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)",
size = 10
)
exp2corr <- ggplot(exgauss_cogskillsE2, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "")
exp2corr1 <- ggMarginal(exp2corr, type = "histogram")
plot_row <- plot_grid(exp1corr1, exp2corr1)
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)",
size = 10
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.05)
)
plot_row <- plot_grid(exp1corr1, exp2corr1, rel_widths = c(1.2,1.2))
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)",
size = 10
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.05)
)
plot_row <- plot_grid(exp1corr1, exp2corr1, labels = c('A', 'B'))
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)",
size = 10
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.05)
)
plot_row <- plot_grid(exp1corr1, exp2corr1, labels = c('Exp. 1', 'Exp. 2'))
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)",
size = 10
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.05)
)
exp1corr <- ggplot(exgauss_cogskills, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "Picture naming response time: mu parameter\n")
exp1corr1 <- ggMarginal(exp1corr, type = "histogram")
exp1corr1
plot_row <- plot_grid(exp1corr1, exp2corr1, labels = c('Exp. 1', 'Exp. 2'), align = "h")
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)",
size = 10
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.05)
)
plot_row <- plot_grid(exp1corr1, exp2corr1, labels = c('Exp. 1', 'Exp. 2'), align = "hv")
xlabel <- ggdraw() +
draw_label(
"Continuous time expectancy task (scaled score)",
size = 10
)
plot_grid(
plot_row, xlabel,
nrow = 2,
rel_heights = c(1, 0.05)
)
library(papaja)
library(tidyverse)
library(kableExtra)
library(ggthemes)
library(data.table)
library(GGally)
library(lme4)
library(lmerTest)
library(broom.mixed)
library(ggExtra)
library(cowplot)
r_refs("r-references.bib")
knitr::opts_chunk$set(echo = TRUE)
theme_set(theme_few(base_size = 12))
# functions we'll need for the analyses
# mexgauss function from retimes package (not compatible with my R version, so we specify the function here)
mexgauss <- function(x,n=length(x))
{
k <- start <- c(mu=NaN,sigma=NaN,tau=NaN) # Momenti
k[1] <- mean(x)
xdev <- x-k[1]
k[2] <- sum(xdev^2)/(n-1)
k[3] <- sum(xdev^3)/(n-1)
if(k[3] > 0)
start[3] <- (k[3]/2)^(1/3)
else
start[3] <- 0.8*sd(x)
start[2] <- sqrt(abs(k[2]-start[3]^2))
start[1] <- k[1]-start[3]
return(start)
}
cor_func <- function(data, mapping, method, ...){
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr_obj <- cor.test(x, y, method=method, use='complete.obs')
cor_signif <- symnum(corr_obj$p.value,
cutpoints = c(0, .001, .01, .05, .1, 1),
symbols = c("***", "**", "*", ".", " "))
label <- paste(signif(corr_obj$estimate, 2),
cor_signif,
sep = "", collapse = "")
ggally_text(
label = label,
mapping = aes(),
xP = 0.5, yP = 0.5,
color = 'black',
...
)
}
mycenter <- function(x){
x <- x-mean(x)
}
lowerFn <- function(data, mapping, method = "lm", ...) {
p <- ggplot(data = data, mapping = mapping) +
geom_point(colour = "#440154FF", alpha = .5) +
geom_smooth(method = method, size = .5, color = "black", ...)
p
}
exp1corr <- ggplot(exgauss_cogskills, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5, size = 3) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "Picture naming response time:\nmu parameter\n")
exp1corr1
exp1corr <- ggplot(exgauss_cogskills, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5, size = 8) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "Picture naming response time:\nmu parameter\n")
exp1corr1 <- ggMarginal(exp1corr, type = "histogram")
exp1corr1
exp1corr <- ggplot(exgauss_cogskills, aes(CTET, mu)) +
geom_point(color = "#440154FF", alpha = .5, size = 5) +
geom_smooth(method = "lm", size = .5, color = "black") +
labs(x = "", y = "Picture naming response time:\nmu parameter\n")
exp1corr1 <- ggMarginal(exp1corr, type = "histogram")
exp1corr1
