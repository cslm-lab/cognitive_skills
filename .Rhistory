library("papaja")
r_refs("r-references.bib")
cogskills_table <- data.frame(Test = character(c("Orthographic span task",
"Symmetry span task", "Rotation span task",
"Stop signal reaction time tast (SSRT)",
"Flanker task", "Simon task",
"Continuous time expectancy task (CTET)",
"Conjunctive continuous performance task (CCPT)")),
skill = character(c("Working memory", "Working memory",
"Working memory", "Non-selective inhibition",
"Selective inhibition", "Selective inhibition", "Sustained attention", "Sustained attention")))
cogskills_table <- data.frame(Test = character(),
skill = character())
Test <- c("Orthographic span task", "Symmetry span task", "Rotation span task",
"Stop signal reaction time tast (SSRT)", "Flanker task", "Simon task",
"Continuous time expectancy task (CTET)", "Conjunctive continuous performance task (CCPT)")
skill <- c("Working memory", "Working memory", "Working memory", "Non-selective inhibition", "Selective inhibition", "Selective inhibition", "Sustained attention", "Sustained attention")
cogskills_table <- data.frame(Test = character(),
skill = character(),
stringsAsFactors = FALSE)
cogskills_table <- data.frame(Test,skill)
View(cogskills_table)
Test <- c("Orthographic span task", "Symmetry span task", "Rotation span task",
"Stop signal reaction time tast (SSRT)", "Flanker task", "Simon task",
"Continuous time expectancy task (CTET)", "Conjunctive continuous performance task (CCPT)")
skill <- c("Working memory", "Working memory", "Working memory", "Non-selective inhibition", "Selective inhibition", "Selective inhibition", "Sustained attention", "Sustained attention")
cogskills_table <- data.frame(Test,skill)
View(cogskills_table)
kable(
cogskills_table,
col.names = c("Test", "Skill being measured"),
caption = "List of tests and cognitive skills they are thought to measure.",
booktabs = T
) %>%
row_spec(0, italic = TRUE) %>%
kable_styling()
library("papaja")
library(tidyverse)
library(kableExtra)
r_refs("r-references.bib")
Test <- c("Orthographic span task", "Symmetry span task", "Rotation span task",
"Stop signal reaction time tast (SSRT)", "Flanker task", "Simon task",
"Continuous time expectancy task (CTET)", "Conjunctive continuous performance task (CCPT)")
skill <- c("Working memory", "Working memory", "Working memory", "Non-selective inhibition", "Selective inhibition", "Selective inhibition", "Sustained attention", "Sustained attention")
cogskills_table <- data.frame(Test,skill)
kable(
cogskills_table,
col.names = c("Test", "Skill being measured"),
caption = "List of tests and cognitive skills they are thought to measure.",
booktabs = T
) %>%
row_spec(0, italic = TRUE) %>%
kable_styling()
library(papaja)
library(tidyverse)
library(kableExtra)
library(ggthemes)
library(data.table)
library(GGally)
r_refs("r-references.bib")
knitr::opts_chunk$set(echo = TRUE)
theme_set(theme_few(base_size = 10))
# Reanalysis of Experiment 1 individual differences----
df <- read.csv("data/Results_PWI_EEG_20200526.csv", sep=";")
colnames(df)[1] <- "Participant"
ccpt <- fread("Data/Experience_01_CCPT.csv", select = c("sujet", "Hit_rate"))
colnames(ccpt) <- c("Participant", "CCPT")
ccpt <- distinct(ccpt)
ctet <- fread("Data/CTET_Results.csv", select = c("Participant", "Hit"))
colnames(ctet)[2] <- "CTET"
ospan <- fread("Data/OSpan_Results.csv", select = c("Participant", "Mean_Block"))
colnames(ospan)[2] <- "OSpan"
rotspan <- fread("Data/RotSpan_Results.csv", select = c("Participant", "Mean_Block"))
colnames(rotspan)[2] <- "RotSpan"
symspan <- fread("Data/SymSpan_Results.csv", select = c("Participant", "Mean_Block"))
colnames(symspan)[2] <- "SymSpan"
ssrt <- fread("Data/StopSignal_Results.csv", select = c("Participant", "Mean_SSRTi"))
colnames(ssrt)[2] <- "SSRT"
mycenter <- function(x){
scale(x, center = TRUE, scale = FALSE)
}
Accuracy <- as.factor(as.character(df$Response_Trial))
df$Participant <- as.factor(as.character(df$Participant))
df$Trial.position <- as.numeric(as.character(df$Picture_ID_Multipic))
df$Picture  <- as.factor(as.character(df$Trigger_Picture))
df$Comment <- as.factor(as.character(df$Response_Trial))
df$Condition <- as.factor(as.character(df$Trigger_Condition))
df$Condition <- plyr::mapvalues(df$Condition, from = c("101", "102", "103","104","105"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
df$Condition <- as.factor(as.character(df$Condition))
nrow(df)
table(df$Response_Trial)
df2b <- df[df$Response_Trial=="correct",]
nrow(df2b)
nrow(df2b)-nrow(df)
nrow(df) - nrow(df2b)
df2b <- df2b[df2b$RT < 2301,]
df3 <- df2b[!is.na(df2b$RT),]
df3 <- df3 %>% select(Participant, RT, Condition, Picture, Flanker_RT_cost, Simon_RT_cost)
df4 <- merge(merge(merge(merge(merge(merge(
df3,
ccpt,),
ctet,),
ospan,),
symspan,),
rotspan,),
ssrt,
by = "Participant")
colnames(df4)[5:12] <- c("Flanker RT cost", "Simon RT cost", "Conjunctive continuous\n performance", "Continuous time\n expectancy", "Operation Span", "Symmetry Span", "Rotation Span", "Stop-signal reaction time")
cog_skills <- df4 %>%
filter(Condition == "baseline") %>%
select(c(1,5:12)) %>%
distinct(.) #%>%
# pivot_longer(., cols = 2:9, names_to = "measure", values_to = "score")
cog_skills_long <- cog_skills %>%
pivot_longer(., cols = 2:9, names_to = "measure", values_to = "score")
dsc <- cog_skills_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(mean = round(mean(score),2))
dsc_sd <- cog_skills_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(sd = round(sd(score),2))
dsc <- merge(dsc, dsc_sd, by = "measure")
colnames(dsc)[1] <- "Measure"
kable(
dsc,
caption = "Mean and standard deviation (sd) of scores on all cognitive tests.",
booktabs = T
) %>%
row_spec(0, italic = TRUE) %>%
kable_styling()
ggplot(cog_skills_long, aes(x = score, fill = measure)) +
geom_histogram(bins = 40) +
facet_wrap(~measure, scales = "free", nrow = 2) +
labs(x = "Score", y = "Count") +
scale_fill_viridis_d("measure") +
theme(legend.position = "none") +
theme(plot.margin = unit(c(.25,.25,.25,.25), "cm"))
cog_skills_2 <- cog_skills
View(cog_skills_2)
colnames(cog_skills_2)[2:9] <- c("Flanker", "Simon", "CCPT", "CTET", "O-Span", "S-Span", "R-Span", "SSRT")
cog_skills_2 <- cog_skills_2[-4]
cor_func <- function(data, mapping, method, ...){
x <- eval_data_col(data, mapping$x)
y <- eval_data_col(data, mapping$y)
corr_obj <- cor.test(x, y, method=method, use='complete.obs')
cor_signif <- symnum(corr_obj$p.value,
cutpoints = c(0, .001, .01, .05, .1, 1),
symbols = c("***", "**", "*", ".", " "))
label <- paste(signif(corr_obj$estimate, 2),
cor_signif,
sep = "", collapse = "")
ggally_text(
label = label,
# label = paste(
#     signif(corr_obj$estimate, 3),
#     cor_signif,
#     sep="",collapse=""
#   ),
#label = as.character(round(corr, 2)),
mapping = aes(),
xP = 0.5, yP = 0.5,
color = 'black',
...
)
}
ggpairs(cog_skills_2,
columns = 2:8,
upper = list(continuous = wrap(cor_func, method = "pearson", size = 2.5)),
lower = list(continuous = wrap(ggally_smooth, color = "#440154FF", alpha = .5)),
diag = list(continuous = wrap(ggally_barDiag))) +
theme(axis.text.x = element_text(angle = 90))
exgaussian <- df4 %>%
filter(Condition == "baseline") %>%
group_by(Participant) %>%
group_modify(~ broom::tidy(retimes::mexgauss(.$RT, n = length(.$RT)))) %>%
pivot_wider(names_from = names, values_from = x)
library(retimes)
install.packages("retimes")
mexgauss <- function(x,n=length(x))
{
k <- start <- c(mu=NaN,sigma=NaN,tau=NaN) # Momenti
k[1] <- mean(x)
xdev <- x-k[1]
k[2] <- sum(xdev^2)/(n-1)
k[3] <- sum(xdev^3)/(n-1)
if(k[3] > 0)
start[3] <- (k[3]/2)^(1/3)
else
start[3] <- 0.8*sd(x)
start[2] <- sqrt(abs(k[2]-start[3]^2))
start[1] <- k[1]-start[3]
return(start)
}
exgaussian <- df4 %>%
filter(Condition == "baseline") %>%
group_by(Participant) %>%
group_modify(~ broom::tidy(mexgauss(.$RT, n = length(.$RT)))) %>%
pivot_wider(names_from = names, values_from = x)
exgauss_cogskills <- merge(cog_skills2[,c(1:3,5:9)], exgaussian, by = "Participant")
View(cog_skills_2)
exgauss_cogskills <- merge(cog_skills_2, exgaussian, by = "Participant")
View(exgauss_cogskills)
mycenter <- function(x){
scale(x, center = TRUE, scale = FALSE)
}
exgauss_cogskills[2:8] <- lapply(exgauss_cogskills[2:8], mycenter)
View(exgauss_cogskills)
exgauss_cogskills <- merge(cog_skills_2, exgaussian, by = "Participant")
View(exgauss_cogskills)
mycenter <- function(x){
scale(x, center = TRUE, scale = FALSE)
}
exgauss_cogskills[2:8] <- lapply(exgauss_cogskills[2:8], mycenter)
mycenter <- function(x){
x <- x-mean(x)
}
exgauss_cogskills <- merge(cog_skills_2, exgaussian, by = "Participant")
mycenter <- function(x){
x <- x-mean(x)
}
exgauss_cogskills[2:8] <- lapply(exgauss_cogskills[2:8], mycenter)
dat <- exgauss_cogskills[c(2:9,11)]
View(dat)
data_cor <- cor(dat[ , colnames(dat) != c("mu", "tau")], dat$x1)
data_cor
data_cor <- cor(dat[ , colnames(dat) != c("mu", "tau")], dat$mu)
data_cor
?cor
View(data_cor)
View(dat)
cor_mu <- cor(dat[2:7], dat$mu)
cor_mu
cor_mu <- cor(dat[1:7], dat$mu)
cor_mu
cor_tau <- cor(dat[1:7], dat$tau)
cor_tau
cor_mu <- cor.test(dat[1:7], dat$mu)
mycor <- function(x,y){
cor <- cor.test(x,y)
return(cor$estimate)
return(cor$p.value)
}
cor_mu <- mycor(dat[1:7], dat$mu)
mycor(dat$Flanker, dat$mu)
exgauss_cor <- data.frame()
View(exgauss_cor)
exgauss_cogskills[2:8] <- map_df(exgauss_cogskills[2:8], mycenter)
View(exgauss_cogskills)
exgauss_cogskills <- merge(cog_skills_2, exgaussian, by = "Participant")
mycenter <- function(x){
x <- x-mean(x)
}
exgauss_cogskills[2:8] <- map_df(exgauss_cogskills[2:8], mycenter)
mycor <- function(x,y){
cor <- cor.test(x,y)
est <- return(cor$estimate)
p <- return(cor$p.value)
}
mycor <- function(x,y){
mycor <- function(x,y){
cor <- cor.test(x,y)
est <- return(cor$estimate)
p <- return(cor$p.value)
}
cor_mu <- map_df(mycor, dat[1:7], dat$mu)
cor_mu <- map_df(dat[1:7], dat$mu, mycor)
cor_mu <- map_df(dat[1:7], dat$mu, psych::corr.test)
cor_mu
cor_mu <- psych::corr.test(dat[1:7], dat$mu)
cor_mu
mycor <- function(x,y){
est <- list()
p <- list()
cor <- psych::corr.test(x,y)
est <- return(cor$estimate)
p <- return(cor$p.value)
}
cor_mu <- lapply(dat[1:7], dat$mu, mycor)
cor_mu <- mycor(dat[1:7], dat$mu)
cor_mu <- psych::corr.test(dat[1:7], dat$mu)
cor_mu$r
cor_tau <- psych::corr.test(dat[1:7], dat$tau)
cor_mu_tau <- data.frame(cor_mu$r, cor_mu$p, cor_tau$r, cor_tau$p)
View(cor_mu_tau)
kable(
cor_mu_tau,
caption = "Correlations between cognitive skills and mu and tau parameters of picture naming response time distributions.",
booktabs = T
) %>%
row_spec(0, italic = TRUE) %>%
kable_styling()
exp2 <- read.csv("Experiment_2_data.csv", sep=",")
exp2 <- read.csv("data/Experiment_2_data.csv", sep=",")
exp2 <- read.csv("data/Experiment_2_data.csv", sep=",")
exp2$Accuracy <- as.factor(as.character(exp2$Response_Trial))
exp2$Participant <- as.factor(as.character(exp2$Participant_ID))
exp2$Picture  <- as.factor(as.character(exp2$Picture_ID))
exp2$Comment <- as.factor(as.character(exp2$Response_Trial))
exp2$Condition <- as.factor(as.character(exp2$Condition_ID))
exp2$Condition <- plyr::mapvalues(exp2$Condition, from = c("9001", "9002", "9003","9004","9005"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
exp2$Condition <- as.factor(as.character(exp2$Condition))
exp2$Speed <- ifelse(exp2$Type_Speed == 3001, "normal", "fast")
df5 <- exp2 %>%
filter(Response_Trial == "correct", RT != "NA")
df5 <- df5 %>%
mutate(block = case_when(
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5001 ~ "block_1",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5002 ~ "block_1",
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5002 ~ "block_2",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5001 ~ "block_2",
)
)
df5$block <- as.factor(df5$block)
cog_skills_exp2 <- df5 %>%
select(c("Participant", "Ospan_PCU", "Symspan_PCU", "Rotspan_PCU", "CCPT_Hit_rate", "CTET_Hit_rate", "Flanker_Cost", "Simon_Cost", "SSRTi")) %>%
distinct(.)
cog_skills_exp2_long <- cog_skills_exp2 %>% pivot_longer(., cols = 2:9, names_to = "measure", values_to = "score")
dscE2 <- cog_skills_exp2_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(mean = round(mean(score),2))
dsc_sd_E2 <- cog_skills_exp2_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(sd = round(sd(score),2))
dscE2 <- merge(dscE2, dsc_sd_E2, by = "measure")
colnames(dscE2)[1] <- "Measure"
dscE2 <- cog_skills_exp2_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(mean = round(mean(score),2))
dsc_sd_E2 <- cog_skills_exp2_long %>%
select(-Participant) %>%
group_by(measure) %>%
summarize(sd = round(sd(score),2))
dscE2 <- merge(dscE2, dsc_sd_E2, by = "measure")
colnames(dscE2)[1] <- "Measure"
kable(
dscE2,
caption = "Mean and standard deviation (sd) of scores on all cognitive tests.",
booktabs = T
) %>%
row_spec(0, italic = TRUE) %>%
kable_styling()
View(df5)
View(df4)
df5 <- df5 %>% select(Participant_ID, RT, Condition, Picture_Name, Speed, block, Flanker_RT_cost, Simon_RT_cost, CCPT_Hit_rate, CTET_Hit_rate, Ospan_PCU, Symspan_PCU, Rotspan_PCU, SSRTi)
df5 <- df5 %>% select(Participant_ID, RT, Condition, Picture_Name, Speed, block, Flanker_Cost, Simon_Cost, CCPT_Hit_rate, CTET_Hit_rate, Ospan_PCU, Symspan_PCU, Rotspan_PCU, SSRTi)
colnames(df5)[7:14] <- c("Flanker RT cost", "Simon RT cost", "Conjunctive continuous\n performance", "Continuous time\n expectancy", "Operation Span", "Symmetry Span", "Rotation Span", "Stop-signal reaction time")
exp2 <- read.csv("data/Experiment_2_data.csv", sep=",")
exp2 <- read.csv("data/Experiment_2_data.csv", sep=",")
exp2$Accuracy <- as.factor(as.character(exp2$Response_Trial))
exp2$Participant <- as.factor(as.character(exp2$Participant_ID))
exp2$Participant <- as.factor(as.character(exp2$Participant_ID))
exp2$Picture  <- as.factor(as.character(exp2$Picture_ID))
exp2$Comment <- as.factor(as.character(exp2$Response_Trial))
exp2$Condition <- as.factor(as.character(exp2$Condition_ID))
exp2$Picture  <- as.factor(as.character(exp2$Picture_ID))
exp2$Comment <- as.factor(as.character(exp2$Response_Trial))
exp2$Condition <- as.factor(as.character(exp2$Condition_ID))
exp2$Condition <- plyr::mapvalues(exp2$Condition, from = c("9001", "9002", "9003","9004","9005"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
exp2$Participant <- as.factor(as.character(exp2$Participant_ID))
exp2$Picture  <- as.factor(as.character(exp2$Picture_ID))
exp2$Comment <- as.factor(as.character(exp2$Response_Trial))
exp2$Condition <- as.factor(as.character(exp2$Condition_ID))
exp2$Condition <- plyr::mapvalues(exp2$Condition, from = c("9001", "9002", "9003","9004","9005"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
exp2$Condition <- as.factor(as.character(exp2$Condition))
exp2$Condition <- plyr::mapvalues(exp2$Condition, from = c("9001", "9002", "9003","9004","9005"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
exp2$Condition <- as.factor(as.character(exp2$Condition))
exp2$Speed <- ifelse(exp2$Type_Speed == 3001, "normal", "fast")
df5 <- exp2 %>%
filter(Response_Trial == "correct", RT != "NA")
df5 <- df5 %>%
mutate(block = case_when(
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5001 ~ "block_1",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5002 ~ "block_1",
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5002 ~ "block_2",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5001 ~ "block_2",
)
)
df5$block <- as.factor(df5$block)
df5 <- exp2 %>%
filter(Response_Trial == "correct", RT != "NA")
exp2 <- read.csv("data/Experiment_2_data.csv", sep=",")
exp2$Accuracy <- as.factor(as.character(exp2$Response_Trial))
exp2$Participant <- as.factor(as.character(exp2$Participant_ID))
exp2$Picture  <- as.factor(as.character(exp2$Picture_ID))
exp2$Comment <- as.factor(as.character(exp2$Response_Trial))
exp2$Condition <- as.factor(as.character(exp2$Condition_ID))
exp2$Condition <- plyr::mapvalues(exp2$Condition, from = c("9001", "9002", "9003","9004","9005"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
exp2$Condition <- as.factor(as.character(exp2$Condition))
exp2$Speed <- ifelse(exp2$Type_Speed == 3001, "normal", "fast")
df5 <- exp2 %>%
filter(Response_Trial == "correct", RT != "NA")
View(exp2)
exp2 <- read.csv("data/Experiment_2_data.csv", sep=",")
View(exp2)
exp2$Accuracy <- as.factor(as.character(exp2$Response_Trial))
exp2$Participant <- as.factor(as.character(exp2$Participant_ID))
exp2$Picture  <- as.factor(as.character(exp2$Picture_ID))
exp2$Comment <- as.factor(as.character(exp2$Response_Trial))
exp2$Condition <- as.factor(as.character(exp2$Condition_ID))
exp2$Condition <- plyr::mapvalues(exp2$Condition, from = c("9001", "9002", "9003","9004","9005"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
exp2$Condition <- as.factor(as.character(exp2$Condition))
exp2$Speed <- ifelse(exp2$Type_Speed == 3001, "normal", "fast")
df5 <- df5 %>% select(Participant, RT, Condition, Picture, Speed, block, Flanker_Cost, Simon_Cost, CCPT_Hit_rate, CTET_Hit_rate, Ospan_PCU, Symspan_PCU, Rotspan_PCU, SSRTi)
df5 <- exp2 %>%
filter(Response_Trial == "correct", RT != "NA")
df5 <- df5 %>%
mutate(block = case_when(
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5001 ~ "block_1",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5002 ~ "block_1",
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5002 ~ "block_2",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5001 ~ "block_2",
)
)
df5 <- df5 %>%
mutate(block = case_when(
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5001 ~ "block_1",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5002 ~ "block_1",
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5002 ~ "block_2",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5001 ~ "block_2",
)
)
exp2 <- read.csv("data/Experiment_2_data.csv", sep=",")
exp2 <- read.csv("data/Experiment_2_data.csv", sep=",")
exp2$Accuracy <- as.factor(as.character(exp2$Response_Trial))
exp2$Accuracy <- as.factor(as.character(exp2$Response_Trial))
exp2$Participant <- as.factor(as.character(exp2$Participant_ID))
exp2$Picture  <- as.factor(as.character(exp2$Picture_ID))
exp2$Comment <- as.factor(as.character(exp2$Response_Trial))
exp2$Condition <- as.factor(as.character(exp2$Condition_ID))
exp2$Condition <- plyr::mapvalues(exp2$Condition, from = c("9001", "9002", "9003","9004","9005"), to = c("baseline","phono.rel", "phono.unr", "sem.rel", "sem.unr"))
exp2$Condition <- as.factor(as.character(exp2$Condition))
exp2$Speed <- ifelse(exp2$Type_Speed == 3001, "normal", "fast")
df5 <- exp2 %>%
filter(Response_Trial == "correct", RT != "NA")
df5 <- df5 %>%
mutate(block = case_when(
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5001 ~ "block_1",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5002 ~ "block_1",
Type_Presentation %in% c(4001,4002) && Set_Nbr == 5002 ~ "block_2",
Type_Presentation %in% c(4003,4004) && Set_Nbr == 5001 ~ "block_2",
)
)
str(df5$Type_Presentation)
str(df5$Set_Nbr)
